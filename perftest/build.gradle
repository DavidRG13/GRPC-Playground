apply plugin: "java"
apply plugin: "scala"

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.scala-lang:scala-library:2.9.1'
    compile 'com.google.protobuf:protobuf-java:3.4.0'
    compile "io.grpc:grpc-stub:1.6.1"
    compile "io.grpc:grpc-protobuf:1.6.1"
    compile "io.grpc:grpc-netty:1.6.1"
    compile "io.gatling:gatling-core:2.3.0"
    compile "io.netty:netty-transport-native-epoll:4.1.14.Final"
    testCompile ("io.gatling.highcharts:gatling-charts-highcharts:2.3.0") {
        exclude module: 'netty-transport-native-epoll'
    }
}

task jsonLoadTest(type: JavaExec) {
    dependsOn testClasses
    description = "load test with Gatling"
    group = "Load Test"
    classpath = sourceSets.test.runtimeClasspath
    jvmArgs = [
        // workaround for https://github.com/gatling/gatling/issues/2689
        "-Dgatling.core.directory.binaries=${sourceSets.test.output.classesDir.toString()}",
        "-Dlogback.configurationFile=${logbackGatlingConfig()}",
    ]
    main = "io.gatling.app.Gatling"
    args = [
        "--simulation", "gatling.simulations.JSONGetEmployeeSimulation",
        "--results-folder", "${buildDir}/gatling-results",
        "--binaries-folder", sourceSets.test.output.classesDir.toString(), // ignored because of above bug
        "--bodies-folder", sourceSets.test.resources.srcDirs.toList().first().toString() + "/gatling/bodies",
    ]
}

task protoLoadTest(type: JavaExec) {
    dependsOn testClasses
    description = "load test with Gatling"
    group = "Load Test"
    classpath = sourceSets.test.runtimeClasspath
    jvmArgs = [
        // workaround for https://github.com/gatling/gatling/issues/2689
        "-Dgatling.core.directory.binaries=${sourceSets.test.output.classesDir.toString()}",
        "-Dlogback.configurationFile=${logbackGatlingConfig()}",
    ]
    main = "io.gatling.app.Gatling"
    args = [
        "--simulation", "gatling.simulations.ProtoGetEmployeeSimulation",
        "--results-folder", "${buildDir}/gatling-results",
        "--binaries-folder", sourceSets.test.output.classesDir.toString(), // ignored because of above bug
        "--bodies-folder", sourceSets.test.resources.srcDirs.toList().first().toString() + "/gatling/bodies",
    ]
}

task grpcLoadTest(type: JavaExec) {
    dependsOn testClasses
    description = "load test with Gatling"
    group = "Load Test"
    classpath = sourceSets.test.runtimeClasspath
    jvmArgs = [
        // workaround for https://github.com/gatling/gatling/issues/2689
        "-Dgatling.core.directory.binaries=${sourceSets.test.output.classesDir.toString()}",
        "-Dlogback.configurationFile=${logbackGatlingConfig()}",
    ]
    main = "io.gatling.app.Gatling"
    args = [
        "--simulation", "gatling.simulations.GrpcGetEmployeeSimulation",
        "--results-folder", "${buildDir}/gatling-results",
        "--binaries-folder", sourceSets.test.output.classesDir.toString(), // ignored because of above bug
        "--bodies-folder", sourceSets.test.resources.srcDirs.toList().first().toString() + "/gatling/bodies",
    ]
}

def logbackGatlingConfig() {
    return sourceSets.test.resources.find { it.name == 'logback-gatling.xml' };
}